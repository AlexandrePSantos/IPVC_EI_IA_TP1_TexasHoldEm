draw hands

player 0 -> blind: 10
player 1 -> Bblind: 11 (maior obrigatoriamente)

entram community cards (3 na mesa)

betting round

add community card (4 na mesa)

betting round

add community card (5 na mesa)

betting round

Showdown (revelar mãos)

Evaluate -> definir o vencedor

----------\\---------
--> action.py: <--
ações possiveis no jogo

----------\\---------
--> card.py: <--
baralho de cartas do jogo
avaliar as mãos dos jogadores

----------\\---------
--> evaluate.py: <--


----------\\---------
--> player.py <--
Esta classe possui métodos para armazenar e acessar o score do jogador,
    o número de jogos que ele jogou,
    suas cartas atuais e também métodos para lidar com eventos de novo jogo
    e resultados do jogo.
Além disso, ela tem um método para imprimir as estatísticas do jogador,
    que incluem o lucro total e o lucro por jogo.

----------\\---------
--> simulator.py: <--
Inicializa o baralho de cartas e atribui duas cartas a cada jogador
    e três cartas comunitárias.
Também permite que uma nova carta comunitária seja adicionada ao jogo
    em cada ronda de apostas.
Revela todas as cartas no final do jogo ou quando um jogador desiste.
O método init_game retorna um novo estado do jogo.
O método before_end_game revela todas as cartas.

----------\\---------
--> state.py: <--
Armazena informações sobre o estado atual do jogo, como a sequência
    de ações realizadas, os jogadores que ainda estão ativos,
    as apostas feitas por cada jogador e as cartas que já foram reveladas.
Também contém métodos para validar e atualizar as ações dos jogadores,
    bem como para clonar o estado atual para ser usado em simulações.
Além disso, ela possui um método para calcular o resultado da partida,
    considerando a mão dos jogadores e o pote acumulado até o momento.

